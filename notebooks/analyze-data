import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the data
df = pd.read_csv("/workspaces/Solar-Energy-Data/data/okba.csv")

# Create a report directory
report_dir = "report"
os.makedirs(report_dir, exist_ok=True)

# Convert date column
df['date'] = pd.to_datetime(df['date'])

# Set seaborn style
sns.set(style="whitegrid")

# 1. Summary statistics
summary = df.describe(include='all')
summary.to_csv(os.path.join(report_dir, "summary_statistics.csv"))

# 2. Clearness Index Over Time
plt.figure(figsize=(14, 6))
sns.lineplot(data=df, x="date", y="clearness_index", hue="location")
plt.title("Clearness Index Over Time")
plt.xlabel("Date")
plt.ylabel("Clearness Index")
plt.legend(title="Location")
plt.tight_layout()
plt.savefig(os.path.join(report_dir, "clearness_index_over_time.png"))
plt.close()

# 3. Average All-Sky Solar Irradiance by Month
monthly_avg = df.groupby(['month', 'location'])['ALLSKY_SFC_SW_DWN'].mean().reset_index()
plt.figure(figsize=(12, 6))
sns.barplot(data=monthly_avg, x="month", y="ALLSKY_SFC_SW_DWN", hue="location")
plt.title("Average All-Sky Surface Solar Irradiance by Month")
plt.xlabel("Month")
plt.ylabel("Irradiance (W/mÂ²)")
plt.tight_layout()
plt.savefig(os.path.join(report_dir, "avg_irradiance_by_month.png"))
plt.close()

# 4. Temperature Category Distribution
plt.figure(figsize=(8, 5))
sns.countplot(data=df, x="temp_category", order=df['temp_category'].value_counts().index)
plt.title("Temperature Category Distribution")
plt.xlabel("Temperature Category")
plt.ylabel("Count")
plt.tight_layout()
plt.savefig(os.path.join(report_dir, "temp_category_distribution.png"))
plt.close()

# 5. Correlation Heatmap
corr = df.select_dtypes(include='number').corr()
plt.figure(figsize=(14, 10))
sns.heatmap(corr, annot=True, fmt=".2f", cmap="coolwarm", square=True)
plt.title("Correlation Heatmap of Numeric Features")
plt.tight_layout()
plt.savefig(os.path.join(report_dir, "correlation_heatmap.png"))
plt.close()

# 6. Cloud Impact by Season
seasonal_cloud = df.groupby("season")["cloud_impact"].mean().reset_index()
plt.figure(figsize=(8, 5))
sns.barplot(data=seasonal_cloud, x="season", y="cloud_impact", palette="viridis")
plt.title("Average Cloud Impact by Season")
plt.xlabel("Season")
plt.ylabel("Average Cloud Impact")
plt.tight_layout()
plt.savefig(os.path.join(report_dir, "cloud_impact_by_season.png"))
plt.close()

print("All analysis completed and exported to 'report/' folder.")
